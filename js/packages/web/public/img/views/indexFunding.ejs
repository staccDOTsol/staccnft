<head>


    <!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-152704802-1"></script>
    <!-- Global Site Tag (gtag.js) - Google Analytics -->
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'UA-152704802-1');
</script>
<script src="https://code.highcharts.com/stock/highstock.js"></script>
<script src="https://code.highcharts.com/stock/modules/exporting.js"></script>
<script src="https://code.highcharts.com/stock/modules/export-data.js"></script>
<script>/*! portfolio-analytics - v0.0.4 (2017-05-25), Roman Rubsamen <roman.rubsamen@gmail.com> */var PortfolioAnalytics=PortfolioAnalytics||{};PortfolioAnalytics=function(a){function b(a,b,c){for(var d=-(1/0),e=-(1/0),f=-1,g=-1,h=-1,i=b;i<c+1;++i){a[i]>d&&(d=a[i],f=i);var j=(d-a[i])/d;j>e&&(e=j,g=f,h=i)}return[e,g,h]}function c(a,b){var c=d(a,b),e=k(c),f=e[0],g=e[2],h=e[3],i=e[4],j=f/g,l=(1+.25*j*j*(i-1)-j*h)/(c.length-1),m=1+.25*(i-1)/c.length;return[j,l,m]}function d(b,c){for(var d=a.arithmeticReturns(b).slice(1),e=a.arithmeticReturns(c).slice(1),f=new d.constructor(d.length),g=0;g<d.length;++g)f[g]=d[g]-e[g];return f}function e(a,b){void 0===b&&(b=!1);var c=[-39.69683028665376,220.9460984245205,-275.9285104469687,138.357751867269,-30.66479806614716,2.506628277459239],d=[-54.47609879822406,161.5858368580409,-155.6989798598866,66.80131188771972,-13.28068155288572],e=[-.007784894002430293,-.3223964580411365,-2.400758277161838,-2.549732539343734,4.374664141464968,2.938163982698783],f=[.007784695709041462,.3224671290700398,2.445134137142996,3.754408661907416],h=.02425,i=1-h,j=NaN;if(0==a)j=Number.NEGATIVE_INFINITY;else if(1==a)j=Number.POSITIVE_INFINITY;else if(a<h){var k=Math.sqrt(-2*Math.log(a));j=(((((e[0]*k+e[1])*k+e[2])*k+e[3])*k+e[4])*k+e[5])/((((f[0]*k+f[1])*k+f[2])*k+f[3])*k+1)}else if(a>i){var k=Math.sqrt(-2*Math.log(1-a));j=-(((((e[0]*k+e[1])*k+e[2])*k+e[3])*k+e[4])*k+e[5])/((((f[0]*k+f[1])*k+f[2])*k+f[3])*k+1)}else if(h<=a&&a<=i){var k=a-.5,l=k*k;j=(((((c[0]*l+c[1])*l+c[2])*l+c[3])*l+c[4])*l+c[5])*k/(((((d[0]*l+d[1])*l+d[2])*l+d[3])*l+d[4])*l+1)}if(b===!0){var m=.5*g(-j/1.4142135623730951)-a,n=2.5066282746310002*m*Math.exp(j*j/2);j-=n/(1+j*n/2)}return j}function f(a){for(var b=a,c=0,d=a,e=a*a,f=1;b!=c;)b=(c=b)+(d*=e/(f+=2));return.5+b*Math.exp(-.5*e-.9189385332046728)}function g(a){return h(a,1)}function h(a,b){var c=1.11e-16,d=26.543,e=[3.1611237438705655,113.86415415105016,377.485237685302,3209.3775891384694,.18577770618460315],f=[23.601290952344122,244.02463793444417,1282.6165260773723,2844.236833439171],g=[.5641884969886701,8.883149794388377,66.11919063714163,298.6351381974001,881.952221241769,1712.0476126340707,2051.0783778260716,1230.3393547979972,2.1531153547440383e-8],h=[15.744926110709835,117.6939508913125,537.1811018620099,1621.3895745666903,3290.7992357334597,4362.619090143247,3439.3676741437216,1230.3393548037495],i=[.30532663496123236,.36034489994980445,.12578172611122926,.016083785148742275,.0006587491615298378,.016315387137302097],j=[2.568520192289822,1.8729528499234604,.5279051029514285,.06051834131244132,.0023352049762686918],k=Math.abs(a);if(k<=.46875){var l=0;k>=c&&(l=k*k);var m=a*((((e[4]*l+e[0])*l+e[1])*l+e[2])*l+e[3])/((((l+f[0])*l+f[1])*l+f[2])*l+f[3]);return 1===b&&(m=1-m),m}if(k<=4){var m=((((((((g[8]*k+g[0])*k+g[1])*k+g[2])*k+g[3])*k+g[4])*k+g[5])*k+g[6])*k+g[7])/((((((((k+h[0])*k+h[1])*k+h[2])*k+h[3])*k+h[4])*k+h[5])*k+h[6])*k+h[7]),l=16*k;l=(l>=0?Math.floor(l):Math.ceil(l))/16;var n=(k-l)*(k+l);m=Math.exp(-l*l)*Math.exp(-n)*m}else if(k>4){var m=0;if(k<d){var l=1/(k*k);m=l*(((((i[5]*l+i[0])*l+i[1])*l+i[2])*l+i[3])*l+i[4])/(((((l+j[0])*l+j[1])*l+j[2])*l+j[3])*l+j[4]),m=(.5641895835477563-m)/k;var l=16*k;l=(l>=0?Math.floor(l):Math.ceil(l))/16;var n=(k-l)*(k+l);m=Math.exp(-l*l)*Math.exp(-n)*m}}return 0===b?(m=.5-m+.5,a<=0&&(m=-m)):1===b&&a<=0&&(m=2-m),m}function i(a,b,c){for(var d=a.length,e=0,f=0,g=0;g<d;++g)f+=Math.pow(Math.max(0,c-a[g]),b);e=f/d;for(var h=0,g=0;g<d;++g)h+=Math.pow(Math.max(0,c-a[g]),b)-e;return(f+h)/d}function j(a){for(var b=a.length,c=0,d=0,e=0;e<b;++e)d+=a[e];c=d/b;for(var f=0,e=0;e<b;++e)f+=a[e]-c;return(d+f)/b}function k(a){for(var b=a.length,c=j(a),d=0,e=0,f=0,g=0,h=0;h<b;++h){var i=a[h]-c,k=i*i;d+=k*k,e+=i*k,f+=k,g+=i}var l=g*g,m=b*b,n=f-g*g/b,o=e-2*g*f/b+2*l*g/(b*b),p=d-4*g*e/b+6*l*f/m-3*l*l/(m*b),q=NaN,r=NaN,s=NaN,t=NaN,u=n/b,q=u*b/(b-1),r=Math.sqrt(q),v=o/(b*Math.sqrt(u)*u),s=v*Math.sqrt(b*(b-1))/(b-2),w=p/(b*u*u),t=(b-1)/((b-2)*(b-3))*((b+1)*w-3*(b-1))+3;return[c,q,r,s,t]}return a.maxDrawdown=function(a){var c=b(a,0,a.length-1);return c[0]==-(1/0)?0:c[0]},a.drawdownFunction=function(a){for(var b=-(1/0),c=new a.constructor(a.length),d=0;d<a.length;++d)a[d]>b&&(b=a[d]),c[d]=(b-a[d])/b;return c},a.topDrawdowns=function(a,c){if(0==c)return[];var d=[],e=[];for(e.push([0,a.length-1,c]);0!=e.length;){var f=e.pop(),g=f[0],h=f[1],i=f[2],j=b(a,g,h),k=j[1],l=j[2],m=j[0];0!=m&&m!=-(1/0)&&d.push([m,k,l]),1==i||k==g&&l==h||(k==g&&l<h?e.push([l,h,i-1]):k>g&&l==h?e.push([g,k,i-1]):(e.push([g,k,i-1]),e.push([l,h,i-1])))}return d.sort(function(a,b){var c=a[0],d=b[0];if(c<d)return 1;if(c>d)return-1;var e=a[1],f=b[1];return e<f?-1:1}),d.slice(0,Math.min(c,d.length))},a.ulcerIndex=function(b){for(var c=a.drawdownFunction(b),d=0,e=0;e<c.length;++e)d+=c[e]*c[e];return Math.sqrt(d/c.length)},a.painIndex=function(b){var c=a.drawdownFunction(b);return j(c)},a.conditionalDrawdown=function(b,c){var d=a.drawdownFunction(b).slice(1);if(d.sort(function(a,b){return a-b}),1==c)return d[d.length-1];for(var e=1;c>e/d.length;)++e;for(var f=d[e-1],g=e/d.length,h=(g-c)*f,i=0,j=e;j<d.length;++j)i+=d[j];i/=d.length;var k=(h+i)/(1-c);return k},a.gainToPainRatio=function(b){var c=a.arithmeticReturns(b).slice(1);if(0==c.length)return NaN;var d=j(c),e=i(c,1,0);return 0==e?NaN:d/e},a.sharpeRatio=function(a,b){var d=c(a,b),e=d[0];return e},a.biasAdjustedSharpeRatio=function(a,b){var d=c(a,b),e=d[0],f=d[2];return e/f},a.doubleSharpeRatio=function(a,b){var d=c(a,b),e=d[0],f=Math.sqrt(d[1]);return e/f},a.sharpeRatioConfidenceInterval=function(a,b,d){var f=c(a,b),g=f[0],h=Math.sqrt(f[1]),i=e(1-d/2),j=g-i*h,k=g+i*h;return[j,k]},a.probabilisticSharpeRatio=function(a,b,d){var e=c(a,b),g=e[0],h=Math.sqrt(e[1]),i=(g-d)/h,j=f(i);return j},a.minimumTrackRecordLength=function(a,b,d,f){var g=c(a,b),h=g[0],i=g[1],j=e(1-d),k=1+i*(a.length-2)*(j/(h-f))*(j/(h-f));return k},a.cumulativeReturn=function(a){var b=NaN;return a.length>=2&&(b=(a[a.length-1]-a[0])/a[0]),b},a.cagr=function(a,b){function c(a){var b=new Date(a);return b.setMinutes(b.getMinutes()-b.getTimezoneOffset()),b}var d=a[0],e=b[0],f=a[a.length-1],g=b[b.length-1],h=864e5,i=(c(g)-c(e))/h,j=i/365.25,k=Math.pow(f/d,1/j)-1;return k},a.arithmeticReturns=function(a){var b=new a.constructor(a.length);b[0]=NaN;for(var c=1;c<a.length;++c)b[c]=(a[c]-a[c-1])/a[c-1];return b},a.valueAtRisk=function(b,c){var d=a.arithmeticReturns(b).slice(1);d.sort(function(a,b){return a-b});var e=1-c,f=Math.floor(e*d.length);if(0==f)return NaN;var g=-d[f-1];return g},a}(PortfolioAnalytics||{}),"undefined"!=typeof module&&(module.exports=PortfolioAnalytics);</script>

    <meta http-equiv="X-UA-Compatible" content="IE=Edge"/>
    
    <meta charset="utf-8"/>
    <meta name="generator" content="Wix.com Website Builder"/>
    <link rel="shortcut icon" href="https://static.wixstatic.com/media/0167b0_98ea8b81fc214b908c85ed1990e5c68a%7Emv2.png/v1/fill/w_32%2Ch_32%2Clg_1%2Cusm_0.66_1.00_0.01/0167b0_98ea8b81fc214b908c85ed1990e5c68a%7Emv2.png" type="image/png"/>
    <link rel="apple-touch-icon" href="https://static.wixstatic.com/media/0167b0_98ea8b81fc214b908c85ed1990e5c68a%7Emv2.png/v1/fill/w_32%2Ch_32%2Clg_1%2Cusm_0.66_1.00_0.01/0167b0_98ea8b81fc214b908c85ed1990e5c68a%7Emv2.png" type="image/png"/>
    
    
    
    
    <meta http-equiv="X-Wix-Meta-Site-Id" content="cbaef0ff-eec1-4c87-92f3-8f76806e424f"/>
    <meta http-equiv="X-Wix-Application-Instance-Id" content="612d6fbd-b199-4b5e-8730-616b1b3049a0"/>
    
    
        <meta http-equiv="X-Wix-Published-Version" content="73"/>
    
    
    
        <meta http-equiv="etag" content="f7c21b7a54a46c1d4ed64d89a3517af8"/>
    
    
    <meta name = "format-detection" content = "telephone=no"/>
    
    

    <meta name="SKYPE_TOOLBAR" content="SKYPE_TOOLBAR_PARSER_COMPATIBLE"/>

    
        <meta id="wixMobileViewport" name="viewport" content="width=980, user-scalable=yes"/>
    
    
    
    
    

    




</head>
<script src="https://code.jquery.com/jquery-1.9.1.js"></script>
<script src="https://code.jquery.com/ui/1.10.3/jquery-ui.js"></script>

<!-- Resources -->
<script src="https://www.amcharts.com/lib/3/amcharts.js"></script>
<script src="https://www.amcharts.com/lib/3/serial.js"></script>
<script src="https://www.amcharts.com/lib/3/plugins/dataloader/dataloader.min.js"></script>
<script src="https://www.amcharts.com/lib/3/plugins/export/export.min.js"></script>
<link rel="stylesheet" href="https://www.amcharts.com/lib/3/plugins/export/export.css" type="text/css" media="all" />
<script src="https://www.amcharts.com/lib/3/themes/light.js"></script>
<style>
    #chartdiv {
        width: 100%;
        height: 500px;
    }
</style>

            
                <body class="prewarmup">
            
<div id='balances'></div>
<div id="container" style="height: 800px; min-width: 310px"></div>

-->
<div id='apr'></div><div id='maxdd'></div><div id='avgdd'></div>
    

    

<script>

    var prices = [];
    var rois = [];
    var lasks = [];
    var asks = []
    var selected = "realized"
    var orders = []
    var positions = []

    var levs = []
var thefees = []
var thevolumes = []
var feeaprs = []
var arrfunds = []
var fundsaprs = []
var fundsaprs365 = []
var volaprs = []
var feeaprs365 = []
var volaprs365 = []
    var usd = []
    var apy = []
    var lev = []

var aprs22 = []
var yields = []
var yieldsyr = []
var aprs22yr = []
    var btcusd = []
    var asks2 = []

    var levs2 = []

    var usd2 = []
    var usd2yr = []
    var usd2uPnL = []
    var usd2yruPnL = []
    var btcusd2 = []
    var lines = []
    var tlines = []

<%for (var result in lines){%>
  lines.push(
{
        color: '<%=lines[result][0]%>', // Red
        width: <%=parseFloat(lines[result][1])%>,
        value: <%=parseFloat(lines[result][2])%>
} )
  <%}%>
    <%for (var result in usds){%>
  usd.push([<%=usds[result]%>])   
  <%}%> 

    <%for (var result in aprs){%>
  apy.push([<%=aprs[result]%>])   
  <%}%> 
    var options = {



        rangeSelector: {
            buttons: [{
                count: 1,
                type: 'minute',
                text: '1m'
            }, {
                count: 5,
                type: 'minute',
                text: '5m'
            }, {
                count: 7,
                type: 'minute',
                text: '7m'
            }, {
                count: 14,
                type: 'minute',
                text: '14m'
            }, {
                count: 1,
                type: 'hour',
                text: '1h'
            }, {
                type: 'all',
                text: 'All'
            }],
            inputEnabled: false,
            selected: 5
        },


        title: {
            text: '% Stable and Market Neutral Yield APYs Over Time'
        },


        yAxis: [],

        tooltip: {
            split: true
        },
        series: [
        ]
    }
            var options2 = {



        rangeSelector: {
            buttons: [{
                count: 1,
                type: 'minute',
                text: '1m'
            }, {
                count: 5,
                type: 'minute',
                text: '5m'
            }, {
                count: 7,
                type: 'minute',
                text: '7m'
            }, {
                count: 14,
                type: 'minute',
                text: '14m'
            }, {
                count: 1,
                type: 'hour',
                text: '1h'
            }, {
                type: 'all',
                text: 'All'
            }],
            inputEnabled: false,
            selected: 5
        },


        title: {
            text: '$ USD Growth per Day/Year'
        },


        yAxis: [],

        tooltip: {
            split: true
        },
        series: [
        ]
    }
         var options3 = {



        rangeSelector: {
            buttons: [{
                count: 1,
                type: 'minute',
                text: '1m'
            }, {
                count: 5,
                type: 'minute',
                text: '5m'
            }, {
                count: 7,
                type: 'minute',
                text: '7m'
            }, {
                count: 14,
                type: 'minute',
                text: '14m'
            }, {
                count: 1,
                type: 'hour',
                text: '1h'
            }, {
                type: 'all',
                text: 'All'
            }],
            inputEnabled: false,
            selected: 5
        },


        title: {
            text: 'Daily % and Monthly % Yields'
        },


        yAxis: [],

        tooltip: {
            split: true
        },
        series: [
        ]
    }
          
    var options1 = {



        rangeSelector: {
            buttons: [{
                count: 1,
                type: 'minute',
                text: '1m'
            }, {
                count: 5,
                type: 'minute',
                text: '5m'
            }, {
                count: 7,
                type: 'minute',
                text: '7m'
            }, {
                count: 14,
                type: 'minute',
                text: '14m'
            }, {
                count: 1,
                type: 'hour',
                text: '1h'
            }, {
                type: 'all',
                text: 'All'
            }],
            inputEnabled: false,
            selected: 5  
        },


        title: {
            text: 'Positions'
        },


        yAxis: [{
            labels: {
                align: 'right',
                x: -3
            },
            title: {
                text: 'Current Positions and Lower Threshold (Higher is 2x that)'
            },
            height: '100%',
            lineWidth: 2,
            resize: {
                enabled: true
            }
        }],

        tooltip: {
            split: true
        },
        series: [{
                name: 'Current Positions',
                data: pos,
                color: '#00FF00'
            },
            {
                name: 'Lower Threshold',
                data: ntar15,
                color: '#0000FF'
            },
            {
                name: 'Lower Threshold',
                data: tar15,
                color: '#0000FF'
            },
            {
                name: 'Higher Threshold',
                data: tar3,
                color: '#FF0000'
            },
            {
                name: 'Higher Threshold',
                data: ntar3,
                color: '#FF0000'
            }
        ]
    }

    var options6 = {



        rangeSelector: {
            buttons: [{
                count: 1,
                type: 'minute',
                text: '1m'
            }, {
                count: 5,
                type: 'minute',
                text: '5m'
            }, {
                count: 7,
                type: 'minute',
                text: '7m'
            }, {
                count: 14,
                type: 'minute',
                text: '14m'
            }, {
                count: 1,
                type: 'hour',
                text: '1h'
            }, {
                type: 'all',
                text: 'All'
            }],
            inputEnabled: false,
            selected: 5
        },


        title: {
            text: 'Daily and Monthly Funding Revenues Growth'
        },


        yAxis: [{
            labels: {
                align: 'right',
                x: -3
            },
            title: {
                text: 'Percent'
            },
            height: '100%',
            lineWidth: 2,
            resize: {
                enabled: true
            }
        }],

        tooltip: {
            split: true
        },
    }
    
    var options5 = {



        rangeSelector: {
            buttons: [{
                count: 1,
                type: 'minute',
                text: '1m'
            }, {
                count: 5,
                type: 'minute',
                text: '5m'
            }, {
                count: 7,
                type: 'minute',
                text: '7m'
            }, {
                count: 14,
                type: 'minute',
                text: '14m'
            }, {
                count: 1,
                type: 'hour',
                text: '1h'
            }, {
                type: 'all',
                text: 'All'
            }],
            inputEnabled: false,
            selected: 5
        },


        title: {
            text: 'Daily and Monthly Volume Growth'
        },


        yAxis: [{
            labels: {
                align: 'right',
                x: -3
            },
            title: {
                text: 'Percent'
            },
            height: '100%',
            lineWidth: 2,
            resize: {
                enabled: true
            }
        }],

        tooltip: {
            split: true
        },
    }
    
    var options4 = {



        rangeSelector: {
            buttons: [{
                count: 1,
                type: 'minute',
                text: '1m'
            }, {
                count: 5,
                type: 'minute',
                text: '5m'
            }, {
                count: 7,
                type: 'minute',
                text: '7m'
            }, {
                count: 14,
                type: 'minute',
                text: '14m'
            }, {
                count: 1,
                type: 'hour',
                text: '1h'
            }, {
                type: 'all',
                text: 'All'
            }],
            inputEnabled: false,
            selected: 5
        },


        title: {
            text: 'Daily and Monthly Fees Growth'
        },


        yAxis: [{
            labels: {
                align: 'right',
                x: -3
            },
            title: {
                text: 'Percent'
            },
            height: '100%',
            lineWidth: 2,
            resize: {
                enabled: true
            }
        }],

        tooltip: {
            split: true
        },
    }
    
            var chart = Highcharts.stockChart('container', options);


        var pos = []
        var tar = []
        var avail = []
        var tar15 = []
        var ntar15 = []
        var tar3 = []
        var ntar3 = []
        var equity = []
        var perc = []
        var derivs = []
        var first = true
        var fperc;
    $(document).ready(function() {
    chart.addAxis({ // Secondary yAxis
        id: 'btc-axis',
        title: {
            text: '$ USD'
        },
        lineWidth: 2,
        opposite: true
    }); chart.addAxis({ // Secondary yAxis
        id: 'btc-axis2',
        title: {
            text: '% APY'
        },
        lineWidth: 2,
    });

    randomColor = Math.floor(Math.random()*16777215).toString(16);

chart.addSeries({
        name: 'USD',
        type: 'line',
        color: 'green',
        yAxis: 'btc-axis',
        data: usd
    });
chart.addSeries({
        name: 'APY',
        type: 'line',
        color: 'black',
        yAxis: 'btc-axis2',
        data: apy
    });
    for (var line in lines){
    console.log(lines[line])
                chart.xAxis[0].addPlotLine(lines[line])
                
}
    /*
    chart.addSeries({
        name: 'BTC Combined Delta',
        type: 'line',
        color: '#00FF00',
        yAxis: 'btc-axis',
        data: asks
    });

           
    
    
    */
        //console.log("ready!");
        //var lines = []
        var AUM = 0;
        var quoinexAsks = []
        var quoinexBids = []
        var startTime = new Date().getTime()
        var absolutelyfirst = true
        var startnotional
        var startfees
        setInterval(function() {
        selected = $('input[name=which]:checked', '#whichform').val()
            theurl = 'localhost:8080'
           //chart = Highcharts.stockChart('container', options);
           $.getJSON('http://' + theurl + '/update?name=test', function(jsondata) {
            var amtusds = 0
            var feebtcs = 0
                //console.log(jsondata);
                AUM = 0
       str = ""
                for (var bal in jsondata.fbalances){
                if (jsondata.fbalances[bal] > 10){
str+= bal + ': ' + jsondata.fbalances[bal] + '<br>'
}
}
                $('#balances').html('Balances:<br>' + str.toString())
                ////console.log(jsondata.line)
                if (jsondata.line != undefined){
                if (!tlines.includes(parseFloat(jsondata.line[2]))){
              chart.xAxis[0].addPlotLine({color: jsondata.line[0], width: parseFloat( jsondata.line[1]), value: parseFloat(jsondata.line[2])})
                tlines.push(parseFloat(jsondata.line[2]))
                }
                }
                if (first == true){
                first = false;
                fperc = jsondata.btcNow;
                }
             
                adrsbtc = []
                adrsusd = []



                asks.push( jsondata.btc); 
                orders = []
                
                
                levs.push(jsondata.lev)
                //console.log(jsondata.usd)
                var abcs = []
                usd.push(jsondata.usds)
                apy.push(jsondata.aprs)

                chart.series[0].setData(usd);
                chart.series[1].setData(apy);
/*
                thefees.push( jsondata.thefees); 
                thevolumes.push( jsondata.thevolumes); 
                feeaprs.push( jsondata.feeaprs); 
                if (arrfunds[arrfunds.length-1][0] != jsondata.arrfunds[0]){


                arrfunds.push(jsondata.arrfunds)
                }
                else {
                arrfunds.push([new Date().getTime(), jsondata.arrfunds[1]])
                }
                volaprs.push( jsondata.volaprs); 
                fundsaprs365.push( [new Date().getTime(), jsondata.fundsaprs[1] * 30]); 
                fundsaprs.push( jsondata.fundsaprs); 
                feeaprs365.push( [new Date().getTime(), jsondata.feeaprs[1] * 30]); 
                volaprs365.push( [new Date().getTime(), jsondata.volaprs[1] * 30]); 
                //levs.push( jsondata.levs);
     */    
           
            });
        }, 2000);
    });

    var trade = [],
        vol = [],
        i = 0;

    i = 0;

    i = 0;


</script><script>
</script>


</body>
</html>
